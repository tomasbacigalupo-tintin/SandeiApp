services:
  postgres:
    image: postgres:14
    container_name: infra-postgres-1
    env_file:
      - ../.env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: sandeidb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6
    restart: always
    env_file:
      - ../.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongodata:/data/db
    networks:
      - backend-net
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping').ok"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    restart: always
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - backend-net
    healthcheck:
      test: ["CMD", "sh", "-c", "redis-cli -a $REDIS_PASSWORD ping | grep PONG"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    env_file:
      - ../.env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "15672:15672"
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    networks:
      - backend-net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ../backend
    env_file:
      - ../backend/.env.example
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${BACKEND_PORT}:3000"
    networks:
      - backend-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  ia-service:
    build: ../ia-service
    env_file:
      - ../ia-service/.env.example
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - "${FASTAPI_PORT}:8000"
    networks:
      - backend-net

  frontend:
    build: ../frontend
    env_file:
      - ../frontend/.env.example
    depends_on:
      - backend
    ports:
      - "5173:80"
    networks:
      - backend-net

networks:
  backend-net:
    driver: bridge

volumes:
  pgdata:
  mongodata:
  rabbitmqdata:
